Lesson 1 -Day 1:
Write a program in main.py that prints the following notes on Python programming into the Output console. Your code should print all three lines.
code:
print("Day 1 - Python Print Function")
print("The function is declared like this:")
print("print('what to print')")

o/p:
Day 1 - Python Print Function
The function is declared like this:
print('what to print')
_______________________________________________________
Lesson 2- DAy 1:
Look at the code in the code editor on the left. There are errors on all 4 lines of code. Fix the code so that it runs without errors.
code:
print("Day 1 - String Manipulation")
print('String Concatenation is done with the "+" sign.')
print('e.g. print("Hello " + "world")')
print("New lines can be created with a backslash and n.")

o/p:
Day 1 - String Manipulation
String Concatenation is done with the "+" sign.
e.g. print("Hello " + "world")
New lines can be created with a backslash and n.
_______________________________________________________________
Lesson 3-Day 1
1)multiply

code:
num1 = int(input())
num2 = int(input())
print(num1 * num2)
i/p:         o/p:6
2 
3

2)length
print(len(input()))
Angela-6
_____________________________________________________________
lesson 4-Day 1
swaping of two variable
code:
# There are two variables, a and b from input
a = input()
b = input()
# 🚨 Don't change the code above ☝️
####################################
# Write your code below this line 👇
c=a
a=b
b=c

# 🚨 Don't change the code below 👇
print("a: " + a)
print("b: " + b)
i/p: 29 41
o/p:a: 41
    b: 29
_________________________________________________________
lesson 5 -DAy 2
adding two digit number
code:
two_digit_number = input()
# 🚨 Don't change the code above 👆
####################################
# Write your code below this line 👇
x=int(two_digit_number[0])
y=int(two_digit_number[1])
z=x+y
print(z)

i/p:39
o/p:12
___________________________________________________________
lesson 6 -DAy 2
Write a program that calculates the Body Mass Index (BMI) from a user's weight and height.
# 1st input: enter height in meters e.g: 1.65
height = float(input())
# 2nd input: enter weight in kilograms e.g: 72
weight = float(input())
# 🚨 Don't change the code above 👆

# Write your code below this line 👇

#print(type(height))
z=weight/(height * height)
print(int(z))
i/p:1.65     o/p:26
    72
____________________________________________________
lesson 7 -DAy 2
I was reading this article by Tim Urban - Your Life in Weeks and realised just how little time we actually have.

Create a program using maths and f-Strings that tells us how many weeks we have left, if we live until 90 years old.

It will take your current age as the input and output a message with our time left in this format:

You have x weeks left.
Where x is replaced with the actual calculated number of weeks the input age has left until age 90.
Warning your output should match the Example Output format exactly, even the positions of the commas and full stops.
code:
age = input()
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
year = 90 - int(age)
week = year * 52
print(f"You have {week} weeks left.")
i/p:15
o/p:You have 3900 weeks left.
_______________________________________________________
Lesson 8 -Day 3
Write a program that works out whether if a given number is an odd or even number.
Even numbers can be divided by 2 with no remainder.
e.g. 86 is even because 86 ÷ 2 = 43
43 does not have any decimal places. Therefore the division is clean.
e.g. 59 is odd because 59 ÷ 2 = 29.5
29.5 is not a whole number, it has decimal places. Therefore there is a remainder of 0.5, so the division is not clean.
The modulo is written as a percentage sign (%) in Python. It gives you the remainder after a division.

code:
number = int(input())
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
if number % 2 == 0:
  print("This is an even number.")
else:
  print("This is an odd number.")

i/p:8      o/p:even
___________________________________________________________
Lesson 9 -Day 3
Write a program that interprets the Body Mass Index (BMI) based on a user's weight and height.
It should tell them the interpretation of their BMI based on the BMI value.
Under 18.5 they are underweight
Over 18.5 but below 25 they have a normal weight
Equal to or over 25 but below 30 they are slightly overweight
Equal to or over 30 but below 35 they are obese
Equal to or over 35 they are clinically obese.

code:
# Enter your height in meters e.g., 1.55
height = float(input())
# Enter your weight in kilograms e.g., 72
weight = int(input())
# 🚨 Don't change the code above 👆
#Write your code below this line 👇
ibm = weight / (height * height)
if ibm < 18.5:
  print(f"Your BMI is {ibm}, you are underweight.")
elif ibm < 25 :
  print(f"Your BMI is {ibm}, you have a normal weight.")
elif ibm < 30:
  print(f"Your BMI is {ibm}, you are slightly overweight.")
elif ibm < 35:
  print(f"Your BMI is {ibm}, you are obese.")
else:
  print(f"Your BMI is {ibm}, you are clinically obese.")
  
i/p:1.75         o/p:Your BMI is 26.122448979591837, you are slightly overweight.
    80
_____________________________________________________________________________
Lesson 10 -Day 3
Leap year
2000 ÷ 4 = 500 (Leap)
2000 ÷ 100 = 20 (Not Leap)
2000 ÷ 400 = 5 (Leap!)
code:
# Which year do you want to check?
year = int(input())
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
if year % 4 == 0:
  if year % 100 == 0:
    if year % 400 == 0:
      print("Leap year")
    else:
      print("Not leap year")
  else:
    print("Leap year")
else:
  print("Not leap year")

i/p:1776      o/p:Leap year
_________________________________________________________________
Lesson 11 -Day 3:
Congratulations, you've got a job at Python Pizza! Your first job is to build an automatic pizza order program.
Based on a user's order, work out their final bill.
Small pizza (S): $15
Medium pizza (M): $20
Large pizza (L): $25
Add pepperoni for small pizza (Y or N): +$2
Add pepperoni for medium or large pizza (Y or N): +$3
Add extra cheese for any size pizza (Y or N): +$1

code:
print("Thank you for choosing Python Pizza Deliveries!")
size = input() # What size pizza do you want? S, M, or L
add_pepperoni = input() # Do you want pepperoni? Y or N
extra_cheese = input() # Do you want extra cheese? Y or N
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
bill=0
if size == "L":
  bill+=25
elif size == "M":
  bill+=20
else:
  bill+=15

if add_pepperoni == "Y":
  if size == "S":
    bill+=2
  else:
    bill+=3
  
if extra_cheese == "Y":
  bill+=1

print(f"Your final bill is: ${bill}.")
________________________________________________________________________
Lesson 12 -Day 3
You are going to write a program that tests the compatibility between two people.
To work out the love score between two people:
Take both people's names and check for the number of times the letters in the word TRUE occurs.
Then check for the number of times the letters in the word LOVE occurs.
Then combine these numbers to make a 2 digit number.
For Love Scores less than 10 or greater than 90, the message should be:
"Your score is *x*, you go together like coke and mentos."
For Love Scores between 40 and 50, the message should be:
"Your score is *y*, you are alright together."
Otherwise, the message will just be their score. e.g.:
"Your score is *z*."
e.g.

name1 = "Angela Yu"
name2 = "Jack Bauer"
T occurs 0 times
R occurs 1 time
U occurs 2 times
E occurs 2 times
Total = 5

L occurs 1 time
O occurs 0 times
V occurs 0 times
E occurs 2 times
Total = 3
Love Score = 53
Print: "Your score is 53."

code:
print("The Love Calculator is calculating your score...")
name1 = input() # What is your name?
name2 = input() # What is their name?
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
c = name1 +name2
lower_name = c.lower()
t = lower_name.count("t")
r = lower_name.count("r")
u = lower_name.count("u")
e = lower_name.count("e")
first = t + r + u + e

l = lower_name.count("l")
o = lower_name.count("o")
v = lower_name.count("v")
e = lower_name.count("e")
second = l + o + v + e

score= int(str(first) + str(second))
if (score < 10) or (score > 90):
  print(f"Your score is {score}, you go together like coke and mentos.")
elif (score >= 40) and (score <= 50):
  print(f"Your score is {score}, you are alright together.")
else:
  print(f"Your score is {score}.")
________________________________________________________________________________
Lesson 13-DAy 4:
Head or tail
code:
import random
coin=random.randint(0,1)
if coin == 1:
   print("Heads")
else:
   print("Tails")
___________________________________________________________
lesson 14-DAy 4:
You are going to write a program that will select a random name from a list of names. The person selected will have to pay for everybody's food bill.
code:
names = names_string.split(", ")
# The code above converts the input into an array seperating
#each name in the input by a comma and space.
# 🚨 Don't change the code above 👆
import random
item = len(names)
random_choice = random.randint(0, item-1)
pay_bill = names[random_choice]
print(pay_bill + " is going to buy the meal today!")

i/p:Angela, Ben, Jenny, Michael, Chloe
o/p:Ben is going to buy the meal today!
______________________________________________________________________
Lesson 16 -DAy 5
You are going to write a program that calculates the average student height from a List of heights.
e.g:student_heights = [180, 124, 165, 173, 189, 169, 146]
180 + 124 + 165 + 173 + 189 + 169 + 146 = 1146
There are a total of 7 heights in student_heights
1146 ÷ 7 = 163.71428571428572
Average height rounded to the nearest whole number = 164

code:
student_heights = input().split()
for n in range(0, len(student_heights)):
  student_heights[n] = int(student_heights[n])
# 🚨 Don't change the code above 👆
  
# Write your code below this row 👇
total=0
for height in student_heights:
  total += height
print(f"total height = {total}")

number=0
for x in student_heights:
  number += 1
print(f"number of students = {number}")

y =round(total/number)
print(f"average height = {y}")
________________________________________________________________
Lesson 17 -DAy 5
You are going to write a program that calculates the highest score from a List of scores.
code:
student_scores = input().split()
for n in range(0, len(student_scores)):
  student_scores[n] = int(student_scores[n])

# Write your code below this row 👇
heighest_score=0
for score in student_scores:
  if score>heighest_score:
    heighest_score=score
print(f"The highest score in the class is: {heighest_score}")

i/p:78 65 89 86 55 91 64 89
In this case, student_scores would be a list that looks like: [78, 65, 89, 86, 55, 91, 64, 89]
Output:
The highest score in the class is: 91
_________________________________________________________
Lesson 18 -DAy 5
You are going to write a program that calculates the sum of all the even numbers from 1 to X. If X is 100 then the first even number would be 2 and the last one is 100:
i.e. 2 + 4 + 6 + 8 +10 ... + 98 + 100
Important, there should only be 1 print statement in your console output. It should just print the final total and not every step of the calculation.
Also, we will constrain the inputs to only take numbers from 0 to a max of 1000.
i/p:10
o/p:30

code:
target = int(input()) # Enter a number between 0 and 1000
# 🚨 Do not change the code above ☝️
# Write your code here 👇
even=0
for x in range(2,target+1,2):
  even += x
print(even)
______________________________________________________________
Lesson 19 -DAy 5
FizzBuzz
1
2
Fizz
4
Buzz
Fizz
7
8
Fizz
Buzz
11
Fizz
13
14
FizzBuzz
etc......
code:
target=100
for x in range(1,target+1):
  #print(i)
  if x%3 ==0 and x%5 ==0:
    print("FizzBuzz")
  elif x%3 == 0:
    print("Fizz")
  elif x%5 == 0:
    print("Buzz")
  else:
    print(x)
_________________________________________________________________
